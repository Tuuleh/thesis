quit()
getwd()
setwd('/home/tuuli/masters_thesis/thesis_analyses')
load('correl.RData')
ls()
load('merged.RData')
ls()
names(merged)
load('all.RData')
ls()
names(survey_results)
names(surveys)
?keep
??keep
library(gdata)
?keep
keep(surveys, survey_results)
ls()
keep(surveys, survey_results, sure=T)
ls()
save.image('surveys.RData')
names(surveys)
names(survey_results)
load('all.RData')
survey_merged <- merge(demographics, surveys, by='user_id')
?merge
names(survey_merged)
survey_merged <- subset(survey_merged, plays_team = T)
names(survey_merged)
keep(survey_merged, survey_results)
ls()
keep(survey_merged, survey_results, sure=T)
ls()
save.image('surveys.RData')
names(survey_results)
names(survey_merged)
rm(survey_merged$created_at.x)
survey_merged$created_at.x <- NULL
survey_merged$created_at.y <- NULL
survey_merged$level <- NULL
survey_merged$birth_year <- NULL
survey_merged$gender <- NULL
survey_merged$non_team_queue <- NULL
ls()
names(survey_merged)
source('~/masters_thesis/thesis_analyses/reverse.R')
ATGS_1 <- reverse(GEQ1)
source('~/masters_thesis/thesis_analyses/reverse.R')
ATGS_1 <- reverse(GEQ1)
ATGS_1 <- reverse(surveys$GEQ1)
ls()
ATGS_1 <- reverse(survey_merged$GEQ1)
survey_merged$ATGS_1 <- reverse(survey_merged$GEQ1)
survey_merged$ATGS_2 <- reverse(survey_merged$GEQ3)
GEQ1 <- reverse(survey_merged$GEQ1)
GEQ3 <- reverse(survey_merged$GEQ3)
GEQ <- survey_merged$GEQ5
GEQ7 <- reverse(survey_merged$GEQ7)
GEQ5 <- survey_merged$GEQ5
rm(GEQ)
GEQ9 <- survey_merged$GEQ9
ATGS <- sum(GEQ1, GEQ3, GEQ5, GEQ7, GEQ9)/5
ATGS
GEQ9
rm(ATGS)
GEQ2 <- reverse(survey_merged$GEQ2)
GEQ4 <- reverse(survey_merged$GEQ4)
GEQ6 <- reverse(survey_merged$GEQ6)
GEQ8 <- reverse(survey_merged$GEQ8)
GEQ11 <- reverse(survey_merged$GEQ11)
GEQ13 <- reverse(survey_merged$GEQ13)
GEQ17 <- reverse(survey_merged$GEQ17)
GEQ15 <- survey_merged$G15
GEQ10 <- survey_merged$G10
GEQ12 <- survey_merged$G12
GEQ16 <- survey_merged$G16
GEQ14 <- reverse(survey_merged$GEQ14)
GEQ18 <- reverse(survey_merged$GEQ18)
save.image('surveys.RData')
install.packages("psy")
library(psy)
?chronbach
?cronbach
ATGS <- data.frame(GEQ1, GEQ3, GEQ5, GEQ7, GEQ9)
ATGT <- data.frame(GEQ2, GEQ4, GEQ6, GEQ8)
GIS <- data.frame(GEQ11, GEQ13, GEQ15, GEQ17)
c(GEQ11, GEQ13, GEQ15, GEQ17)
GEQ11
GEQ13
GEQ15
GEQ15 <- surveys$GEQ15
ls()
GEQ15 <- survey_merged$GEQ15
rm(ATGS_1)
GIS <- data.frame(GEQ11, GEQ13, GEQ15, GEQ17)
GIT <- data.frame(GEQ10, GEQ12, GEQ14, GEQ16, GEQ18)
GEQ10
GEQ10 <- survey_results$GEQ10
GIT <- data.frame(GEQ10, GEQ12, GEQ14, GEQ16, GEQ18)
GEQ12
names(survey_results)
GEQ10 <- survey_merged$GEQ10
GEQ12 <- survey_merged$GEQ10
GEQ12 <- survey_merged$GEQ12
GEQ14
GEQ16
GEQ16 <- survey_merged$GEQ16
GEQ18
GIT <- data.frame(GEQ10, GEQ12, GEQ14, GEQ16, GEQ18)
save.image('surveys.RData')
?cronbach
cronbach(ATGS)
cronbach(ATGT)
cronbach(GIS)
cronbach(GIT)
GEQ <- data.frame(GEQ+[1:18])
GEQ <- data.frame(cat(GEQ+[1:18]))
?cfa
GEQ <- cat(ATGT,ATGS)
GEQ <- data.frame(ATGT,ATGS)
GEQ
names(GEQ)
GEQ <- data.frame(ATGT,ATGS,GIS, GIT)
GEQ
save.image('surveys.RData')
ls()
GEQ[198,] == survey_merged$[198,]
GEQ[198,] == survey_merged[198,]
GEQ$GEQ5[198,] == survey_merged$GEQ5[198,]
GEQ[198,]$GEQ5 == survey_merged[198,]$GEQ5
GEQ[197,]$GEQ5 == survey_merged[197,]$GEQ5
GEQ[196,]$GEQ5 == survey_merged[196,]$GEQ5
GEQ[195,]$GEQ5 == survey_merged[195,]$GEQ5
GEQ[194,]$GEQ5 == survey_merged[194,]$GEQ5
GEQ[194,]$GEQ16 == survey_merged[194,]$GEQ16
rownames(survey_merged)
survey_merged$user_id
rownames(survey_merged) == survey_merged$user_id
rownames(survey_merged) <- survey_merged$user_id
row_merged$user_id
survey_merged$user_id
rownames(GEQ) == rownames(survey_merged)
rownames(GEQ) <- rownames(survey_merged)
save.image('surveys.RData')
install.packages("nFactors")
library(nFactors)
source('~/.active-rstudio-document')
source('~/masters_thesis/thesis_analyses/parallel_analysis.R')
parallel_analysis(GEQ)
ls()
scree_plot <- parallel_analysis(GEQ)
scree_plo
scree_plot
typeof(scree_plot)
source('~/masters_thesis/thesis_analyses/parallel_analysis.R')
scree_plot <- parallel_analysis(GEQ)
scee_plot
scree_plo
scree_plot
ls()
source('~/masters_thesis/thesis_analyses/ml_cfa.R')
source('~/masters_thesis/thesis_analyses/ml_cfa.R')
ml_cfa(GEQ, 3, rotation='varimax')
ml_cfa(GEQ, 3, rotation='promax')
ml_cfa(GEQ, 2, rotation='promax')
ml_cfa(GEQ, 2, rotation='varimax')
ml_cfa(GEQ, 3, rotation='promax')
ml_cfa(GEQ, 1, rotation='none')
GEQ1==survey_results$GEQ1
GEQ1 == survey_results$GEQ1
survey_results$GEQ1
surveys$GEQ1 == GEQ1
ls()
ml_cfa(GEQ, 2, rotation='none')
ml_cfa(GEQ, 2, rotation='varimax')
ml_cfa(GEQ, 2, rotation='promax')
save.image('FA.RData')
source('~/masters_thesis/thesis_analyses/pca.R')
pca(GEQ)
fit <- princomp(GEQ, cor=TRUE)
summary(fit) # print variance accounted for
loadings(fit) # pc loadings
plot(fit,type="lines") # scree plot
fit$scores # the principal components
biplot(fit)
fit <- principal(GEQ, nfactors=3, rotate="varimax")
install.packages("psych")
fit <- principal(GEQ, nfactors=3, rotate="varimax")
fit <- principal(GEQ, nfactors=3, rotate="varimax")
?principal
install.packages("psych")
?principal
librar(psych)
library(psych)
fit <- principal(GEQ, nfactors=3, rotate="varimax")
install.packages("GPArotation")
library(GPArotation)
fit <- principal(GEQ, nfactors=3, rotate="varimax")
fit
fit <- principal(GEQ, nfactors=2, rotate="varimax")
fit
fit <- principal(GEQ, nfactors=2, rotate="promax")
fit
ls()
names(survey_merged)
save.image('FA.RData')
fit
Principal Components Analysis
Call: principal(r = GEQ, nfactors = 2, rotate = "promax")
Standardized loadings (pattern matrix) based upon correlation matrix
PC1   PC2   h2   u2
GEQ2   0.28  0.28 0.22 0.78
GEQ4   0.72 -0.09 0.48 0.52
GEQ6   0.55  0.02 0.31 0.69
GEQ8   0.85 -0.16 0.65 0.35
GEQ1   0.01  0.45 0.20 0.80
GEQ3   0.03  0.57 0.34 0.66
GEQ5   0.24 -0.84 0.61 0.39
GEQ7   0.15  0.47 0.30 0.70
GEQ9   0.11 -0.60 0.32 0.68
GEQ11  0.60 -0.04 0.34 0.66
GEQ13  0.02  0.62 0.39 0.61
GEQ15  0.05 -0.75 0.54 0.46
GEQ17  0.02  0.79 0.63 0.37
GEQ10 -0.72  0.18 0.45 0.55
GEQ12 -0.63 -0.04 0.41 0.59
GEQ14  0.67  0.02 0.47 0.53
GEQ16 -0.60 -0.22 0.51 0.49
GEQ18  0.58  0.03 0.35 0.65
PC1  PC2
SS loadings           4.05 3.48
Proportion Var        0.22 0.19
Cumulative Var        0.22 0.42
Proportion Explained  0.54 0.46
Cumulative Proportion 0.54 1.00
With component correlations of
PC1  PC2
PC1 1.00 0.39
PC2 0.39 1.00
Test of the hypothesis that 2 components are sufficient.
The degrees of freedom for the null model are  153  and the objective function was  6.61
The degrees of freedom for the model are 118  and the objective function was  2.16
The total number of observations was  198  with MLE C
ml_cfa(GEQ,2,rotation='promax')
load(ranked_separate.RData)
load("ranked_separate.RData")
ls()
names(ranked)
load('merged.RData')
names(merged)
load('all.RData')
ls()
names(survey_results)
names(surveys)
new_surveys<-data.frame(surveys$user_id)
names(new_survey)
names(new_surveys)
names(new_surveys) <- 'user_id'
rownames(new_surveys) <- new_surveys$user_id
new_surveys
surveys$["f461628c-4360-4d43-b1c1-7b2e4938c559",]
surveys["f461628c-4360-4d43-b1c1-7b2e4938c559",]
rownames(surveys)
rownames(surveys) <- surveys$user_id
surveys["f461628c-4360-4d43-b1c1-7b2e4938c559",]
names(surveys)
surveys$GEQ_task <- mean(surveys$GEQ4, surveys$GEQ6, surveys$GEQ8, surveys$GEQ11, surveys$GEQ10, surveys$GEQ12, surveys$GEQ14, surveys$GEQ16, surveys$GEQ18)
surveys$GEQ_task <- (surveys$GEQ4 + surveys$GEQ6 + surveys$GEQ8 + surveys$GEQ11 + surveys$GEQ10 + surveys$GEQ12 + surveys$GEQ14 + surveys$GEQ16 + surveys$GEQ18)/9
surveys$GEQ_social <- (surveys$GEQ1 + surveys$GEQ3 + surveys$GEQ5 + surveys$GEQ7 + surveys$GEQ9 + surveys$GEQ13 + surveys$GEQ15 + surveys$GEQ17)/8
append_surveys <- data.frame(surveys$user_id, surveys$GEQ_task, surveys$GEQ_social)
ls()
?merge
names(append_survey)
names(append_surveys)
names(appens_surveys) <- ("user_id","GEQ_task","GEQ_social")
names(appens_surveys) <- c("user_id","GEQ_task","GEQ_social")
names(append_surveys) <- ("user_id","GEQ_task","GEQ_social")
names(append_surveys) <- c("user_id","GEQ_task","GEQ_social")
names(append_surveys)
append_surveys[1:3]
rownames(append_surveys) <- append_surveys$user_id
append(surveys)
append_surveys[1:5]
append_surveys[1:5,]
merge(ranked, append_surveys, by=user_id, all =T)
merge(ranked, append_surveys, by="user_id", all =T)
ranked<-merge(ranked, append_surveys, by.x = ranked$user_id, by.y = append_surveys$user_id ,all =T)
merge(ranked, append_surveys, by.x = ranked$user_id, by.y = append_surveys$user_id ,all =T)
merge(ranked, append_surveys, by = 'user_id' ,all =T)
test_merge <- merge(ranked, append_surveys, by = 'user_id' ,all =T)
test_merge$user_id
names(test_merge)
rownames(test_merge) <- test_merge$user_id
test_merge["f7c01ed7-ebc4-4731-8558-1bd3db6c8402",]$GEQ_task == surveys[f7c01ed7-ebc4-4731-8558-1bd3db6c8402",]$GEQ_task
test_merge["f7c01ed7-ebc4-4731-8558-1bd3db6c8402",]$GEQ_task == surveys["f7c01ed7-ebc4-4731-8558-1bd3db6c8402",]$GEQ_task
ranked <- merge(ranked, append_surveys, by = 'user_id' ,all =T)
ranked_group <- merge(ranked_group, append_surveys, by = 'user_id' ,all =T)
ranked_solo <- merge(ranked_solo, append_surveys, by = 'user_id' ,all =T)
names(ranked_solo)
names(append_surveys)
length(ranked_solo$GEQ_social)
length(ranked_group$GEQ_social)
names(ranked_group)
subset(ranked_group, ranked_group$non_team_queue == NA)
subset(ranked_group, is.na(ranked_group$non_team_queue)
)
subset(ranked_group, is.na(ranked_group$non_team_queue, select='user_id','ranked_group$non_team_queue')
)
subset(ranked_group, is.na(ranked_group$non_team_queue), select='user_id','ranked_group$non_team_queue')
subset(ranked_group, is.na(ranked_group$non_team_queue), select=('user_id','ranked_group$non_team_queue'))
subset(ranked_group, is.na(ranked_group$non_team_queue), select=('user_id','non_team_queue'))
subset(ranked_solo, is.na(ranked_group$non_team_queue), select=('user_id','non_team_queue'))
subset(ranked_solo, is.na(ranked_group$non_team_queue)
)
subset(ranked_solo, is.na(ranked_group$user_id)
)
subset(ranked_solo, is.na(ranked_group$user_id))[1:5]
subset(ranked_group, is.na(ranked_group$user_id))[1:5]
subset(ranked_group, ranked_group$user_id == <NA>)
ranked_group["f93e4c19-70da-4319-9994-359d3be1066c",]
rownames(ranked_group)
rownames(ranked_group) <- ranked_group$user_id
ranked_group["f93e4c19-70da-4319-9994-359d3be1066c",]
ranked_solo["f93e4c19-70da-4319-9994-359d3be1066c",]
rownames(ranked_solo)
rownames(ranked_solo) <- ranked_solo$user_id
ranked_solo["f93e4c19-70da-4319-9994-359d3be1066c",]
ls()
save.image('mess.RData')
uid_error
rm(uid_error)
names(uid)
rm(uid)
names(ranked_solo)
names(ranked_group)
names(ranked)
length(ranked$GEQ_task)
length(ranked_solo$GEQ_task)
length(ranked_group$GEQ_task)
subset(ranked_group, is.na(ranked_group$user_id))
ranked_group_is_na <- subset(ranked_group, is.na(ranked_group$user_id))
ranked_group_is_na$user_id
rm(ranked_group_is_na)
ranked)group
ranked_group
names(ranked)
cor(ranked$GEQ_task, ranked$team_rating)
cor(ranked$GEQ_task, ranked$team_rating, use = 'pairwise.complete.obs')
cor(ranked$GEQ_social, ranked$team_rating, use = 'pairwise.complete.obs')
cor(ranked_group$GEQ_social, ranked_group$team_rating, use = 'pairwise.complete.obs')
cor(ranked_group$GEQ_task, ranked_group$team_rating, use = 'pairwise.complete.obs')
length(ranked_group$team_rating)
length(ranked_group$GEQ_task)
??keep
library(gdata)
ls()
names(ranked)
keep(ranked)
ls()
keep(ranked, sure=T)
ls()
save.image('ranked.RData')
load('mess.RData')
ls()
??cronbach
rm(gis)
ls()
rm(GIS)
rm(GIT)
rm(ATGT)
rm(ATGS)
GEQ 1 == surveys$GEQ1
GEQ1 == surveys$GEQ1
surveys$GEQ1[2:3]
GEQ_task <- list(survey$GEQ4,survey$GEQ6,survey$GEQ8,survey$GEQ11,survey$GEQ10,survey$GEQ12,survey$GEQ14,survey$GEQ16,survey$GEQ18)
GEQ_social <- list(survey$GEQ1,survey$GEQ3,survey$GEQ5,survey$GEQ7,survey$GEQ9,survey$GEQ13,survey$GEQ15,survey$GEQ17)
GEQ_social <- list(surveys$GEQ1,survey$GEQ3,survey$GEQ5,survey$GEQ7,survey$GEQ9,survey$GEQ13,survey$GEQ15,survey$GEQ17)
GEQ_social <- list(surveys$GEQ1,surveys$GEQ3,surveys$GEQ5,surveys$GEQ7,surveys$GEQ9,surveys$GEQ13,surveys$GEQ15,surveys$GEQ17)
GEQ_task <- list(surveys$GEQ4,surveys$GEQ6,surveys$GEQ8,surveys$GEQ11,surveys$GEQ10,surveys$GEQ12,surveys$GEQ14,surveys$GEQ16,surveys$GEQ18)
cronbach(GEQ_social)
?cronbach
??cronbach
library(psy)
?cronbach(GEQ_task)
cronbach(GEQ_task)
save.image('mess.RData')
cronbach(data.frame(GEQ_task))
GEQ_task <- data.frame(GEQ_task)
GEQ_social <- data.frame(GEQ_social)
cronbach(GEQ_social)
ls()
rm(list<-ls())
rm(list=ls())
ls()
load('results.RData')
load('ranked.RData')
ls()
ranked_team <- subset(ranked, ranked$plays_team == T)
ranked_solo <- subset(ranked, ranked$plays_team == F)
save.image('ranked_separate')
save.image('ranked_separate.RData')
